{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nimport { initializeImagePositions } from '../utils/position';\nimport imagesData from '../assets/images.json';\nconst useCanvas = () => {\n  _s();\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [images, setImages] = useState([]);\n  const [maxZIndex, setMaxZIndex] = useState(1000);\n\n  // Inicializar imágenes con posiciones\n  useEffect(() => {\n    const positionedImages = initializeImagePositions(imagesData.images, viewport);\n    setImages(positionedImages);\n    setMaxZIndex(1000 + positionedImages.length);\n  }, [viewport]);\n\n  // Actualizar viewport en resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const handleDrag = useCallback((movement, imageId) => {\n    if (!movement) return; // Validación para evitar undefined\n\n    setImages(prevImages => prevImages.map(img => img.id === imageId ? {\n      ...img,\n      x: img.x + (movement[0] || 0),\n      // Añadimos validación\n      y: img.y + (movement[1] || 0) // Añadimos validación\n    } : img));\n  }, []);\n  const handleImageSelect = useCallback(imageId => {\n    setMaxZIndex(prev => prev + 1);\n    setImages(prevImages => prevImages.map(img => img.id === imageId ? {\n      ...img,\n      zIndex: maxZIndex + 1\n    } : img));\n  }, [maxZIndex]);\n  return {\n    images,\n    handleDrag,\n    handleImageSelect,\n    viewport // Exportamos viewport para debugging si es necesario\n  };\n};\n_s(useCanvas, \"TIbHxJ6VKtUkQUqlZCmxyNj+AYw=\");\nexport default useCanvas;","map":{"version":3,"names":["useState","useCallback","useEffect","initializeImagePositions","imagesData","useCanvas","_s","viewport","setViewport","width","window","innerWidth","height","innerHeight","images","setImages","maxZIndex","setMaxZIndex","positionedImages","length","handleResize","addEventListener","removeEventListener","handleDrag","movement","imageId","prevImages","map","img","id","x","y","handleImageSelect","prev","zIndex"],"sources":["/Users/litl/Dropbox/Jona/litl/proyectos/artwall/src/hooks/useCanvas.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { initializeImagePositions } from '../utils/position';\nimport imagesData from '../assets/images.json';\n\nconst useCanvas = () => {\n  const [viewport, setViewport] = useState({ width: window.innerWidth, height: window.innerHeight });\n  const [images, setImages] = useState([]);\n  const [maxZIndex, setMaxZIndex] = useState(1000);\n\n  // Inicializar imágenes con posiciones\n  useEffect(() => {\n    const positionedImages = initializeImagePositions(imagesData.images, viewport);\n    setImages(positionedImages);\n    setMaxZIndex(1000 + positionedImages.length);\n  }, [viewport]);\n\n  // Actualizar viewport en resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport({ width: window.innerWidth, height: window.innerHeight });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const handleDrag = useCallback((movement, imageId) => {\n    if (!movement) return; // Validación para evitar undefined\n\n    setImages(prevImages => \n      prevImages.map(img => \n        img.id === imageId\n          ? {\n              ...img,\n              x: img.x + (movement[0] || 0), // Añadimos validación\n              y: img.y + (movement[1] || 0)  // Añadimos validación\n            }\n          : img\n      )\n    );\n  }, []);\n\n  const handleImageSelect = useCallback((imageId) => {\n    setMaxZIndex(prev => prev + 1);\n    setImages(prevImages =>\n      prevImages.map(img =>\n        img.id === imageId\n          ? { ...img, zIndex: maxZIndex + 1 }\n          : img\n      )\n    );\n  }, [maxZIndex]);\n\n  return { \n    images, \n    handleDrag, \n    handleImageSelect,\n    viewport // Exportamos viewport para debugging si es necesario\n  };\n};\n\nexport default useCanvas; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACxD,SAASC,wBAAwB,QAAQ,mBAAmB;AAC5D,OAAOC,UAAU,MAAM,uBAAuB;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IAAES,KAAK,EAAEC,MAAM,CAACC,UAAU;IAAEC,MAAM,EAAEF,MAAM,CAACG;EAAY,CAAC,CAAC;EAClG,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAE,SAAS,CAAC,MAAM;IACd,MAAMgB,gBAAgB,GAAGf,wBAAwB,CAACC,UAAU,CAACU,MAAM,EAAEP,QAAQ,CAAC;IAC9EQ,SAAS,CAACG,gBAAgB,CAAC;IAC3BD,YAAY,CAAC,IAAI,GAAGC,gBAAgB,CAACC,MAAM,CAAC;EAC9C,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;;EAEd;EACAL,SAAS,CAAC,MAAM;IACd,MAAMkB,YAAY,GAAGA,CAAA,KAAM;MACzBZ,WAAW,CAAC;QAAEC,KAAK,EAAEC,MAAM,CAACC,UAAU;QAAEC,MAAM,EAAEF,MAAM,CAACG;MAAY,CAAC,CAAC;IACvE,CAAC;IAEDH,MAAM,CAACW,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAC/C,OAAO,MAAMV,MAAM,CAACY,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAGtB,WAAW,CAAC,CAACuB,QAAQ,EAAEC,OAAO,KAAK;IACpD,IAAI,CAACD,QAAQ,EAAE,OAAO,CAAC;;IAEvBT,SAAS,CAACW,UAAU,IAClBA,UAAU,CAACC,GAAG,CAACC,GAAG,IAChBA,GAAG,CAACC,EAAE,KAAKJ,OAAO,GACd;MACE,GAAGG,GAAG;MACNE,CAAC,EAAEF,GAAG,CAACE,CAAC,IAAIN,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MAAE;MAC/BO,CAAC,EAAEH,GAAG,CAACG,CAAC,IAAIP,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE;IACjC,CAAC,GACDI,GACN,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAG/B,WAAW,CAAEwB,OAAO,IAAK;IACjDR,YAAY,CAACgB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAC9BlB,SAAS,CAACW,UAAU,IAClBA,UAAU,CAACC,GAAG,CAACC,GAAG,IAChBA,GAAG,CAACC,EAAE,KAAKJ,OAAO,GACd;MAAE,GAAGG,GAAG;MAAEM,MAAM,EAAElB,SAAS,GAAG;IAAE,CAAC,GACjCY,GACN,CACF,CAAC;EACH,CAAC,EAAE,CAACZ,SAAS,CAAC,CAAC;EAEf,OAAO;IACLF,MAAM;IACNS,UAAU;IACVS,iBAAiB;IACjBzB,QAAQ,CAAC;EACX,CAAC;AACH,CAAC;AAACD,EAAA,CAvDID,SAAS;AAyDf,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}