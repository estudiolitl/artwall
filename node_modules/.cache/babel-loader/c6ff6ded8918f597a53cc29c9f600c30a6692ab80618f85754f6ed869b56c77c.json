{"ast":null,"code":"var _jsxFileName = \"/Users/litl/Dropbox/Jona/litl/proyectos/artwall/src/components/Canvas/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport * as S from './Canvas.styles';\nimport Image from '../Image/Image';\nimport useCanvas from '../../hooks/useCanvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = () => {\n  _s();\n  const {\n    images\n  } = useCanvas();\n  const [position, setPosition] = useState({\n    x: -10000,\n    y: -10000\n  });\n  const bind = useGesture({\n    onDrag: ({\n      delta: [dx, dy]\n    }) => {\n      setPosition(current => ({\n        x: current.x + dx,\n        y: current.y + dy\n      }));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(S.Viewport, {\n    children: [/*#__PURE__*/_jsxDEV(S.CanvasContainer, {\n      ...bind(),\n      style: {\n        transform: `translate(${position.x}px, ${position.y}px)`\n      },\n      children: [/*#__PURE__*/_jsxDEV(S.CenterMarker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), images.map(image => /*#__PURE__*/_jsxDEV(Image, {\n        image: image,\n        style: {\n          position: 'absolute',\n          left: image.x,\n          top: image.y,\n          width: image.width,\n          height: image.height\n        }\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Coordinates, {\n      children: [\"x: \", Math.round(-position.x), \", y: \", Math.round(-position.y)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"E+5jCH+Zk5tvS46fzHyXTvTtU/M=\", false, function () {\n  return [useCanvas, useGesture];\n});\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useGesture","S","Image","useCanvas","jsxDEV","_jsxDEV","Canvas","_s","images","position","setPosition","x","y","bind","onDrag","delta","dx","dy","current","Viewport","children","CanvasContainer","style","transform","CenterMarker","fileName","_jsxFileName","lineNumber","columnNumber","map","image","left","top","width","height","id","Coordinates","Math","round","_c","$RefreshReg$"],"sources":["/Users/litl/Dropbox/Jona/litl/proyectos/artwall/src/components/Canvas/Canvas.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport * as S from './Canvas.styles';\nimport Image from '../Image/Image';\nimport useCanvas from '../../hooks/useCanvas';\n\nconst Canvas = () => {\n  const { images } = useCanvas();\n  const [position, setPosition] = useState({ x: -10000, y: -10000 });\n\n  const bind = useGesture({\n    onDrag: ({ delta: [dx, dy] }) => {\n      setPosition(current => ({\n        x: current.x + dx,\n        y: current.y + dy\n      }));\n    }\n  });\n\n  return (\n    <S.Viewport>\n      <S.CanvasContainer\n        {...bind()}\n        style={{\n          transform: `translate(${position.x}px, ${position.y}px)`\n        }}\n      >\n        <S.CenterMarker />\n        \n        {images.map(image => (\n          <Image\n            key={image.id}\n            image={image}\n            style={{\n              position: 'absolute',\n              left: image.x,\n              top: image.y,\n              width: image.width,\n              height: image.height\n            }}\n          />\n        ))}\n      </S.CanvasContainer>\n      \n      <S.Coordinates>\n        x: {Math.round(-position.x)}, y: {Math.round(-position.y)}\n      </S.Coordinates>\n    </S.Viewport>\n  );\n};\n\nexport default Canvas; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAO,KAAKC,CAAC,MAAM,iBAAiB;AACpC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IAAEY,CAAC,EAAE,CAAC,KAAK;IAAEC,CAAC,EAAE,CAAC;EAAM,CAAC,CAAC;EAElE,MAAMC,IAAI,GAAGb,UAAU,CAAC;IACtBc,MAAM,EAAEA,CAAC;MAAEC,KAAK,EAAE,CAACC,EAAE,EAAEC,EAAE;IAAE,CAAC,KAAK;MAC/BP,WAAW,CAACQ,OAAO,KAAK;QACtBP,CAAC,EAAEO,OAAO,CAACP,CAAC,GAAGK,EAAE;QACjBJ,CAAC,EAAEM,OAAO,CAACN,CAAC,GAAGK;MACjB,CAAC,CAAC,CAAC;IACL;EACF,CAAC,CAAC;EAEF,oBACEZ,OAAA,CAACJ,CAAC,CAACkB,QAAQ;IAAAC,QAAA,gBACTf,OAAA,CAACJ,CAAC,CAACoB,eAAe;MAAA,GACZR,IAAI,CAAC,CAAC;MACVS,KAAK,EAAE;QACLC,SAAS,EAAE,aAAad,QAAQ,CAACE,CAAC,OAAOF,QAAQ,CAACG,CAAC;MACrD,CAAE;MAAAQ,QAAA,gBAEFf,OAAA,CAACJ,CAAC,CAACuB,YAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEjBpB,MAAM,CAACqB,GAAG,CAACC,KAAK,iBACfzB,OAAA,CAACH,KAAK;QAEJ4B,KAAK,EAAEA,KAAM;QACbR,KAAK,EAAE;UACLb,QAAQ,EAAE,UAAU;UACpBsB,IAAI,EAAED,KAAK,CAACnB,CAAC;UACbqB,GAAG,EAAEF,KAAK,CAAClB,CAAC;UACZqB,KAAK,EAAEH,KAAK,CAACG,KAAK;UAClBC,MAAM,EAAEJ,KAAK,CAACI;QAChB;MAAE,GARGJ,KAAK,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe,CAAC,eAEpBvB,OAAA,CAACJ,CAAC,CAACmC,WAAW;MAAAhB,QAAA,GAAC,KACV,EAACiB,IAAI,CAACC,KAAK,CAAC,CAAC7B,QAAQ,CAACE,CAAC,CAAC,EAAC,OAAK,EAAC0B,IAAI,CAACC,KAAK,CAAC,CAAC7B,QAAQ,CAACG,CAAC,CAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEjB,CAAC;AAACrB,EAAA,CA3CID,MAAM;EAAA,QACSH,SAAS,EAGfH,UAAU;AAAA;AAAAuC,EAAA,GAJnBjC,MAAM;AA6CZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}