{"ast":null,"code":"var _jsxFileName = \"/Users/litl/Dropbox/Jona/litl/proyectos/artwall/src/components/Canvas/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport * as S from './Canvas.styles';\nimport Image from '../Image/Image';\nimport useCanvas from '../../hooks/useCanvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_SIZE = 20000;\nconst Canvas = () => {\n  _s();\n  const {\n    images\n  } = useCanvas();\n  const [position, setPosition] = useState({\n    x: -10000,\n    y: -10000\n  });\n  const [wrappedPositions, setWrappedPositions] = useState([]);\n\n  // Calcula las posiciones envueltas para crear el efecto infinito\n  useEffect(() => {\n    const wrapPositions = () => {\n      const baseX = position.x;\n      const baseY = position.y;\n\n      // Genera 9 posiciones (3x3 grid de canvas)\n      return [{\n        x: baseX - CANVAS_SIZE,\n        y: baseY - CANVAS_SIZE\n      }, {\n        x: baseX,\n        y: baseY - CANVAS_SIZE\n      }, {\n        x: baseX + CANVAS_SIZE,\n        y: baseY - CANVAS_SIZE\n      }, {\n        x: baseX - CANVAS_SIZE,\n        y: baseY\n      }, {\n        x: baseX,\n        y: baseY\n      }, {\n        x: baseX + CANVAS_SIZE,\n        y: baseY\n      }, {\n        x: baseX - CANVAS_SIZE,\n        y: baseY + CANVAS_SIZE\n      }, {\n        x: baseX,\n        y: baseY + CANVAS_SIZE\n      }, {\n        x: baseX + CANVAS_SIZE,\n        y: baseY + CANVAS_SIZE\n      }];\n    };\n    setWrappedPositions(wrapPositions());\n  }, [position]);\n  const bind = useGesture({\n    onDrag: ({\n      delta: [dx, dy]\n    }) => {\n      setPosition(current => {\n        const newX = current.x + dx;\n        const newY = current.y + dy;\n\n        // Envolver las coordenadas cuando se alcanza el límite\n        return {\n          x: newX - Math.floor(newX / CANVAS_SIZE) * CANVAS_SIZE,\n          y: newY - Math.floor(newY / CANVAS_SIZE) * CANVAS_SIZE\n        };\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(S.Viewport, {\n    children: [wrappedPositions.map((pos, index) => /*#__PURE__*/_jsxDEV(S.CanvasContainer, {\n      ...bind(),\n      style: {\n        transform: `translate(${pos.x}px, ${pos.y}px)`\n      },\n      children: images.map(image => /*#__PURE__*/_jsxDEV(Image, {\n        image: image,\n        style: {\n          position: 'absolute',\n          left: image.x,\n          top: image.y,\n          width: image.width,\n          height: image.height\n        }\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(S.Coordinates, {\n      children: [\"x: \", Math.round(-position.x), \", y: \", Math.round(-position.y)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"2tWVqvGL2XsumYd8diGMdDov1eI=\", false, function () {\n  return [useCanvas, useGesture];\n});\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useEffect","useGesture","S","Image","useCanvas","jsxDEV","_jsxDEV","CANVAS_SIZE","Canvas","_s","images","position","setPosition","x","y","wrappedPositions","setWrappedPositions","wrapPositions","baseX","baseY","bind","onDrag","delta","dx","dy","current","newX","newY","Math","floor","Viewport","children","map","pos","index","CanvasContainer","style","transform","image","left","top","width","height","id","fileName","_jsxFileName","lineNumber","columnNumber","Coordinates","round","_c","$RefreshReg$"],"sources":["/Users/litl/Dropbox/Jona/litl/proyectos/artwall/src/components/Canvas/Canvas.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport * as S from './Canvas.styles';\nimport Image from '../Image/Image';\nimport useCanvas from '../../hooks/useCanvas';\n\nconst CANVAS_SIZE = 20000;\n\nconst Canvas = () => {\n  const { images } = useCanvas();\n  const [position, setPosition] = useState({ x: -10000, y: -10000 });\n  const [wrappedPositions, setWrappedPositions] = useState([]);\n\n  // Calcula las posiciones envueltas para crear el efecto infinito\n  useEffect(() => {\n    const wrapPositions = () => {\n      const baseX = position.x;\n      const baseY = position.y;\n      \n      // Genera 9 posiciones (3x3 grid de canvas)\n      return [\n        { x: baseX - CANVAS_SIZE, y: baseY - CANVAS_SIZE },\n        { x: baseX, y: baseY - CANVAS_SIZE },\n        { x: baseX + CANVAS_SIZE, y: baseY - CANVAS_SIZE },\n        { x: baseX - CANVAS_SIZE, y: baseY },\n        { x: baseX, y: baseY },\n        { x: baseX + CANVAS_SIZE, y: baseY },\n        { x: baseX - CANVAS_SIZE, y: baseY + CANVAS_SIZE },\n        { x: baseX, y: baseY + CANVAS_SIZE },\n        { x: baseX + CANVAS_SIZE, y: baseY + CANVAS_SIZE },\n      ];\n    };\n\n    setWrappedPositions(wrapPositions());\n  }, [position]);\n\n  const bind = useGesture({\n    onDrag: ({ delta: [dx, dy] }) => {\n      setPosition(current => {\n        const newX = current.x + dx;\n        const newY = current.y + dy;\n        \n        // Envolver las coordenadas cuando se alcanza el límite\n        return {\n          x: newX - Math.floor(newX / CANVAS_SIZE) * CANVAS_SIZE,\n          y: newY - Math.floor(newY / CANVAS_SIZE) * CANVAS_SIZE\n        };\n      });\n    }\n  });\n\n  return (\n    <S.Viewport>\n      {wrappedPositions.map((pos, index) => (\n        <S.CanvasContainer\n          key={index}\n          {...bind()}\n          style={{\n            transform: `translate(${pos.x}px, ${pos.y}px)`\n          }}\n        >\n          {images.map(image => (\n            <Image\n              key={image.id}\n              image={image}\n              style={{\n                position: 'absolute',\n                left: image.x,\n                top: image.y,\n                width: image.width,\n                height: image.height\n              }}\n            />\n          ))}\n        </S.CanvasContainer>\n      ))}\n      \n      <S.Coordinates>\n        x: {Math.round(-position.x)}, y: {Math.round(-position.y)}\n      </S.Coordinates>\n    </S.Viewport>\n  );\n};\n\nexport default Canvas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}