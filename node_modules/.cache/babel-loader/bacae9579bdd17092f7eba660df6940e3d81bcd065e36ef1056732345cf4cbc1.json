{"ast":null,"code":"var _jsxFileName = \"/Users/litl/Dropbox/Jona/litl/proyectos/artwall/src/components/Canvas/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport * as S from './Canvas.styles';\nimport Image from '../Image/Image';\nimport useCanvas from '../../hooks/useCanvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = () => {\n  _s();\n  const {\n    images,\n    handleDrag,\n    handleImageSelect\n  } = useCanvas();\n  const [canvasPosition, setCanvasPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDraggingImage, setIsDraggingImage] = useState(false);\n  const bindCanvas = useGesture({\n    onDrag: ({\n      movement,\n      event\n    }) => {\n      if (isDraggingImage) return;\n      event.preventDefault();\n      setCanvasPosition(prev => ({\n        x: prev.x + movement[0],\n        y: prev.y + movement[1]\n      }));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(S.CanvasContainer, {\n    ...bindCanvas(),\n    style: {\n      transform: `translate(${canvasPosition.x}px, ${canvasPosition.y}px)`\n    },\n    children: images.map(image => /*#__PURE__*/_jsxDEV(Image, {\n      image: image,\n      onDrag: (movement, id) => {\n        setIsDraggingImage(true);\n        handleDrag(movement, id);\n      },\n      onDragEnd: () => setIsDraggingImage(false),\n      onSelect: handleImageSelect\n    }, image.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"mupkLNqFqF2Y7wEjlKnUPZbuq9Y=\", false, function () {\n  return [useCanvas, useGesture];\n});\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useGesture","S","Image","useCanvas","jsxDEV","_jsxDEV","Canvas","_s","images","handleDrag","handleImageSelect","canvasPosition","setCanvasPosition","x","y","isDraggingImage","setIsDraggingImage","bindCanvas","onDrag","movement","event","preventDefault","prev","CanvasContainer","style","transform","children","map","image","id","onDragEnd","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/litl/Dropbox/Jona/litl/proyectos/artwall/src/components/Canvas/Canvas.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport * as S from './Canvas.styles';\nimport Image from '../Image/Image';\nimport useCanvas from '../../hooks/useCanvas';\n\nconst Canvas = () => {\n  const { images, handleDrag, handleImageSelect } = useCanvas();\n  const [canvasPosition, setCanvasPosition] = useState({ x: 0, y: 0 });\n  const [isDraggingImage, setIsDraggingImage] = useState(false);\n\n  const bindCanvas = useGesture({\n    onDrag: ({ movement, event }) => {\n      if (isDraggingImage) return;\n      event.preventDefault();\n      setCanvasPosition(prev => ({\n        x: prev.x + movement[0],\n        y: prev.y + movement[1]\n      }));\n    }\n  });\n\n  return (\n    <S.CanvasContainer\n      {...bindCanvas()}\n      style={{\n        transform: `translate(${canvasPosition.x}px, ${canvasPosition.y}px)`\n      }}\n    >\n      {images.map(image => (\n        <Image\n          key={image.id}\n          image={image}\n          onDrag={(movement, id) => {\n            setIsDraggingImage(true);\n            handleDrag(movement, id);\n          }}\n          onDragEnd={() => setIsDraggingImage(false)}\n          onSelect={handleImageSelect}\n        />\n      ))}\n    </S.CanvasContainer>\n  );\n};\n\nexport default Canvas; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAO,KAAKC,CAAC,MAAM,iBAAiB;AACpC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,MAAM;IAAEC,UAAU;IAAEC;EAAkB,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC7D,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC;IAAEc,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACpE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMkB,UAAU,GAAGjB,UAAU,CAAC;IAC5BkB,MAAM,EAAEA,CAAC;MAAEC,QAAQ;MAAEC;IAAM,CAAC,KAAK;MAC/B,IAAIL,eAAe,EAAE;MACrBK,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBT,iBAAiB,CAACU,IAAI,KAAK;QACzBT,CAAC,EAAES,IAAI,CAACT,CAAC,GAAGM,QAAQ,CAAC,CAAC,CAAC;QACvBL,CAAC,EAAEQ,IAAI,CAACR,CAAC,GAAGK,QAAQ,CAAC,CAAC;MACxB,CAAC,CAAC,CAAC;IACL;EACF,CAAC,CAAC;EAEF,oBACEd,OAAA,CAACJ,CAAC,CAACsB,eAAe;IAAA,GACZN,UAAU,CAAC,CAAC;IAChBO,KAAK,EAAE;MACLC,SAAS,EAAE,aAAad,cAAc,CAACE,CAAC,OAAOF,cAAc,CAACG,CAAC;IACjE,CAAE;IAAAY,QAAA,EAEDlB,MAAM,CAACmB,GAAG,CAACC,KAAK,iBACfvB,OAAA,CAACH,KAAK;MAEJ0B,KAAK,EAAEA,KAAM;MACbV,MAAM,EAAEA,CAACC,QAAQ,EAAEU,EAAE,KAAK;QACxBb,kBAAkB,CAAC,IAAI,CAAC;QACxBP,UAAU,CAACU,QAAQ,EAAEU,EAAE,CAAC;MAC1B,CAAE;MACFC,SAAS,EAAEA,CAAA,KAAMd,kBAAkB,CAAC,KAAK,CAAE;MAC3Ce,QAAQ,EAAErB;IAAkB,GAPvBkB,KAAK,CAACC,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQd,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAExB,CAAC;AAAC5B,EAAA,CArCID,MAAM;EAAA,QACwCH,SAAS,EAIxCH,UAAU;AAAA;AAAAoC,EAAA,GALzB9B,MAAM;AAuCZ,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}